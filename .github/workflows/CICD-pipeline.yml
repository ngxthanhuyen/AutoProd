name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout le code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Spring Boot - setup JDK et build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot JAR
        run: |
          cd springboot-application
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

      # 3️⃣ Docker - build des images
      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/springboot-application:latest ./springboot-application
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask-application:latest ./flask-application

      # 4️⃣ Docker Hub login et push
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/springboot-application:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-application:latest

      # 5️⃣ Debug - lister fichiers pour vérifier docker-compose.yml
      - name: List repository files
        run: ls -R

      # 6️⃣ Copier docker-compose.yml vers la VM
      - name: Copy docker-compose.yml to VM
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ubuntu@${{ secrets.VM_HOST }}:~/docker-compose.yml

      # 7️⃣ Déploiement sur la VM
      - name: Deploy on VM
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.VM_HOST }} << 'EOF'
            # Ajouter l'utilisateur ubuntu au groupe docker
            sudo usermod -aG docker ubuntu || true

            # Vérifier si docker-compose est installé
            if ! command -v docker-compose &> /dev/null
            then
              echo "docker-compose non trouvé, installation..."
              sudo apt update
              sudo apt install -y docker-compose
            fi

            # Aller dans le home et lancer docker-compose
            cd ~
            docker-compose down || true
            docker-compose pull
            docker-compose up -d --remove-orphans

            echo "Déploiement terminé !"
            docker ps
          EOF
